---
export interface Props {
  resources: {
    pdfs?: string[];
    images?: string[];
    videos?: string[];
    codeExamples?: string[];
  };
  articleSlug: string;
}

const { resources, articleSlug } = Astro.props;

const getFileIcon = (filename: string) => {
  const extension = filename.split('.').pop()?.toLowerCase();
  switch (extension) {
    case 'pdf':
      return 'üìÑ';
    case 'png':
    case 'jpg':
    case 'jpeg':
    case 'gif':
      return 'üñºÔ∏è';
    case 'mp4':
    case 'webm':
    case 'mov':
      return 'üé•';
    case 'py':
    case 'js':
    case 'ts':
    case 'jsx':
    case 'tsx':
      return 'üíª';
    case 'md':
      return 'üìù';
    default:
      return 'üìé';
  }
};

const getFileType = (filename: string) => {
  const extension = filename.split('.').pop()?.toLowerCase();
  switch (extension) {
    case 'pdf':
      return 'PDF';
    case 'png':
    case 'jpg':
    case 'jpeg':
    case 'gif':
      return 'Imagen';
    case 'mp4':
    case 'webm':
    case 'mov':
      return 'Video';
    case 'py':
    case 'js':
    case 'ts':
    case 'jsx':
    case 'tsx':
      return 'C√≥digo';
    case 'md':
      return 'Documento';
    default:
      return 'Archivo';
  }
};

const formatFileSize = (filename: string) => {
  // Esta es una estimaci√≥n b√°sica, en un caso real podr√≠as obtener el tama√±o real del archivo
  const extension = filename.split('.').pop()?.toLowerCase();
  switch (extension) {
    case 'pdf':
      return '~2.5 MB';
    case 'png':
    case 'jpg':
    case 'jpeg':
      return '~500 KB';
    case 'mp4':
      return '~15 MB';
    case 'py':
    case 'js':
    case 'ts':
      return '~5 KB';
    case 'md':
      return '~3 KB';
    default:
      return '~1 KB';
  }
};
---

{resources && (resources.pdfs?.length > 0 || resources.images?.length > 0 || resources.videos?.length > 0 || resources.codeExamples?.length > 0) && (
  <div class="resource-download bg-base-darker border border-neon-cyan rounded-xl p-6 mb-8">
    <div class="flex items-center gap-3 mb-6">
      <div class="w-10 h-10 bg-neon-cyan rounded-full flex items-center justify-center">
        <svg class="w-5 h-5 text-base-dark" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd"></path>
        </svg>
      </div>
      <div>
        <h3 class="text-xl font-bold text-base-light">Recursos del Art√≠culo</h3>
        <p class="text-sm text-base-grey">Descarga archivos relacionados, c√≥digo y documentaci√≥n</p>
      </div>
    </div>

    <div class="grid gap-4">
      <!-- PDFs -->
      {resources.pdfs && resources.pdfs.length > 0 && (
        <div>
          <h4 class="text-lg font-semibold text-base-light mb-3 flex items-center gap-2">
            <span>üìÑ</span>
            Documentos PDF
          </h4>
          <div class="grid gap-2">
            {resources.pdfs.map((pdf) => (
              <a 
                href={`/blog/${articleSlug}/${pdf}`}
                class="resource-item bg-base-dark border border-neon-cyan/30 rounded-lg p-4 hover:border-neon-cyan hover:shadow-lg hover:shadow-neon-cyan/10 transition-all duration-300 group"
                download
              >
                <div class="flex items-center justify-between">
                  <div class="flex items-center gap-3">
                    <div class="text-2xl">{getFileIcon(pdf)}</div>
                    <div>
                      <div class="font-medium text-base-light group-hover:text-neon-cyan transition-colors">
                        {pdf}
                      </div>
                      <div class="text-xs text-base-grey">
                        {getFileType(pdf)} ‚Ä¢ {formatFileSize(pdf)}
                      </div>
                    </div>
                  </div>
                  <div class="flex items-center gap-2 text-neon-cyan group-hover:gap-3 transition-all">
                    <span class="text-sm font-medium">Descargar</span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}

      <!-- Im√°genes -->
      {resources.images && resources.images.length > 0 && (
        <div>
          <h4 class="text-lg font-semibold text-base-light mb-3 flex items-center gap-2">
            <span>üñºÔ∏è</span>
            Im√°genes
          </h4>
          <div class="grid gap-2">
            {resources.images.map((image) => (
              <a 
                href={`/blog/${articleSlug}/images/${image}`}
                class="resource-item bg-base-dark border border-neon-cyan/30 rounded-lg p-4 hover:border-neon-cyan hover:shadow-lg hover:shadow-neon-cyan/10 transition-all duration-300 group"
                target="_blank"
              >
                <div class="flex items-center justify-between">
                  <div class="flex items-center gap-3">
                    <div class="text-2xl">{getFileIcon(image)}</div>
                    <div>
                      <div class="font-medium text-base-light group-hover:text-neon-cyan transition-colors">
                        {image}
                      </div>
                      <div class="text-xs text-base-grey">
                        {getFileType(image)} ‚Ä¢ {formatFileSize(image)}
                      </div>
                    </div>
                  </div>
                  <div class="flex items-center gap-2 text-neon-cyan group-hover:gap-3 transition-all">
                    <span class="text-sm font-medium">Ver</span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}

      <!-- Videos -->
      {resources.videos && resources.videos.length > 0 && (
        <div>
          <h4 class="text-lg font-semibold text-base-light mb-3 flex items-center gap-2">
            <span>üé•</span>
            Videos
          </h4>
          <div class="grid gap-2">
            {resources.videos.map((video) => (
              <a 
                href={`/blog/${articleSlug}/videos/${video}`}
                class="resource-item bg-base-dark border border-neon-cyan/30 rounded-lg p-4 hover:border-neon-cyan hover:shadow-lg hover:shadow-neon-cyan/10 transition-all duration-300 group"
                target="_blank"
              >
                <div class="flex items-center justify-between">
                  <div class="flex items-center gap-3">
                    <div class="text-2xl">{getFileIcon(video)}</div>
                    <div>
                      <div class="font-medium text-base-light group-hover:text-neon-cyan transition-colors">
                        {video}
                      </div>
                      <div class="text-xs text-base-grey">
                        {getFileType(video)} ‚Ä¢ {formatFileSize(video)}
                      </div>
                    </div>
                  </div>
                  <div class="flex items-center gap-2 text-neon-cyan group-hover:gap-3 transition-all">
                    <span class="text-sm font-medium">Reproducir</span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}

      <!-- C√≥digo -->
      {resources.codeExamples && resources.codeExamples.length > 0 && (
        <div>
          <h4 class="text-lg font-semibold text-base-light mb-3 flex items-center gap-2">
            <span>üíª</span>
            Ejemplos de C√≥digo
          </h4>
          <div class="grid gap-2">
            {resources.codeExamples.map((code) => (
              <a 
                href={`/blog/${articleSlug}/code/${code}`}
                class="resource-item bg-base-dark border border-neon-cyan/30 rounded-lg p-4 hover:border-neon-cyan hover:shadow-lg hover:shadow-neon-cyan/10 transition-all duration-300 group"
                target="_blank"
              >
                <div class="flex items-center justify-between">
                  <div class="flex items-center gap-3">
                    <div class="text-2xl">{getFileIcon(code)}</div>
                    <div>
                      <div class="font-medium text-base-light group-hover:text-neon-cyan transition-colors">
                        {code}
                      </div>
                      <div class="text-xs text-base-grey">
                        {getFileType(code)} ‚Ä¢ {formatFileSize(code)}
                      </div>
                    </div>
                  </div>
                  <div class="flex items-center gap-2 text-neon-cyan group-hover:gap-3 transition-all">
                    <span class="text-sm font-medium">Ver c√≥digo</span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
                    </svg>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}
    </div>

    <div class="mt-6 pt-4 border-t border-base-grey/20">
      <p class="text-sm text-base-grey text-center">
        üí° <strong>Tip:</strong> Todos los recursos est√°n organizados en la carpeta del art√≠culo para f√°cil acceso y portabilidad.
      </p>
    </div>
  </div>
)}

<style>
  .resource-item {
    transition: all 0.3s ease;
  }

  .resource-item:hover {
    transform: translateY(-2px);
  }
</style>
