---
import NeonBox from "../atoms/NeonBox.astro";
import Gradients from "../skeleton/Gradients.astro";
import Tags from "../Tags.astro";

export interface Props {
    title: string;
    tags: string[];
    color: "pink" | "yellow" | "cyan" | "purple";
    readTime?: string;
    date?: string;
    description?: string;
    slug: string;
    id: string;
    category?: string;
    class?: string;
    noBorderLeft?: boolean;
    noBorderRight?: boolean;
    noBorderTop?: boolean;
    noBorderBottom?: boolean;
    transitionName?: string;
    titleSize?: string;
}

const {
    title,
    tags,
    color,
    readTime,
    date,
    description,
    slug,
    id,
    category = "",
    class: className = "",
    noBorderLeft = false,
    noBorderRight = false,
    noBorderTop = false,
    noBorderBottom = false,
    transitionName = "",
    titleSize = "text-xl md:text-2xl",
} = Astro.props;

const colorClasses = {
    pink: {
        border: "border-neon-pink",
        bg: "bg-neon-pink",
        shadow: "hover:shadow-neon-pink",
        hoverText: "group-hover:text-neon-pink",
    },
    yellow: {
        border: "border-neon-yellow",
        bg: "bg-neon-yellow",
        shadow: "hover:shadow-neon-yellow",
        hoverText: "group-hover:text-neon-yellow",
    },
    cyan: {
        border: "border-neon-cyan",
        bg: "bg-neon-cyan",
        shadow: "hover:shadow-neon-cyan",
        hoverText: "group-hover:text-neon-cyan",
    },
    purple: {
        border: "border-neon-purple",
        bg: "bg-neon-purple",
        shadow: "hover:shadow-neon-purple",
        hoverText: "group-hover:text-neon-purple",
    },
};

const currentColor = colorClasses[color];
---

<NeonBox
    class={`${className} rounded-xl`}
    color={color}
    noBorderLeft={noBorderLeft}
    noBorderRight={noBorderRight}
    noBorderTop={noBorderTop}
    noBorderBottom={noBorderBottom}
    transitionName={id ? `article-card-${id}` : ""}
>
    <article
        class={`relative bg-base-dark rounded-xl overflow-hidden ${currentColor.shadow} h-full transition-all duration-300 group flex flex-col justify-between align-center`}
    >
        <Gradients />
        <div class="relative z-10 p-8">
            <div class="mb-4">
                <Tags
                    tags={tags}
                    category={category}
                    size="medium"
                    style={id ? `view-transition-name: article-tags-${id}` : ""}
                />
            </div>
            <h2
                class={`${titleSize} font-bold mb-4 text-base-light ${currentColor.hoverText} transition-colors`}
                style={id ? `view-transition-name: article-title-${id}` : ""}
            >
                {title}
            </h2>
            {
                description && (
                    <p
                        class="text-base-grey mb-6"
                        view-transition-name={
                            id ? `article-description-${id}` : ""
                        }
                    >
                        {description}
                    </p>
                )
            }
            <div class="flex justify-end">
                <div
                    class={`w-8 h-8 ${currentColor.bg} rounded-full flex items-center justify-center group-hover:scale-110 transition-transform`}
                >
                    <a href={slug} data-astro-prefetch>
                        <svg
                            class="w-4 h-4 text-base-dark"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path
                                fill-rule="evenodd"
                                d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
                                clip-rule="evenodd"></path>
                        </svg>
                    </a>
                </div>
            </div>
        </div>
    </article>
</NeonBox>
